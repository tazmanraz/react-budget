[{"C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\index.js":"1","C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\App.js":"2","C:\\Users\\imtia\\Documents\\projects\\01-starting-setup\\src\\index.js":"3","C:\\Users\\imtia\\Documents\\projects\\01-starting-setup\\src\\App.js":"4","C:\\Users\\imtia\\Documents\\projects\\01-starting-setup\\src\\components\\Expenses\\Expenses.js":"5","C:\\Users\\imtia\\Documents\\projects\\01-starting-setup\\src\\components\\Expenses\\ExpenseItem.js":"6","C:\\Users\\imtia\\Documents\\projects\\01-starting-setup\\src\\components\\UI\\Card.js":"7","C:\\Users\\imtia\\Documents\\projects\\01-starting-setup\\src\\components\\Expenses\\ExpenseDate.js":"8","C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\components\\Expenses\\Expenses.js":"9","C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\components\\Expenses\\ExpenseItem.js":"10","C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\components\\UI\\Card.js":"11","C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\components\\Expenses\\ExpenseDate.js":"12","C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\components\\NewExpense\\NewExpense.js":"13","C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\components\\NewExpense\\ExpenseForm.js":"14","C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\components\\Expenses\\ExpensesFilter.js":"15","C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\components\\Expenses\\ExpensesList.js":"16"},{"size":142,"mtime":1616592305000,"results":"17","hashOfConfig":"18"},{"size":995,"mtime":1626752457086,"results":"19","hashOfConfig":"18"},{"size":142,"mtime":1616592305000,"results":"20","hashOfConfig":"21"},{"size":656,"mtime":1625726508915,"results":"22","hashOfConfig":"21"},{"size":796,"mtime":1625726469083,"results":"23","hashOfConfig":"21"},{"size":437,"mtime":1625726456294,"results":"24","hashOfConfig":"21"},{"size":176,"mtime":1625726401062,"results":"25","hashOfConfig":"21"},{"size":514,"mtime":1625726435924,"results":"26","hashOfConfig":"21"},{"size":1379,"mtime":1626760875709,"results":"27","hashOfConfig":"18"},{"size":717,"mtime":1626758731160,"results":"28","hashOfConfig":"18"},{"size":176,"mtime":1625726401062,"results":"29","hashOfConfig":"18"},{"size":514,"mtime":1625726435924,"results":"30","hashOfConfig":"18"},{"size":963,"mtime":1626836657161,"results":"31","hashOfConfig":"18"},{"size":2437,"mtime":1626836610485,"results":"32","hashOfConfig":"18"},{"size":733,"mtime":1626637525953,"results":"33","hashOfConfig":"18"},{"size":761,"mtime":1626762213149,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1uaigse",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cyjtbc",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\index.js",[],["70","71"],"C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\App.js",[],"C:\\Users\\imtia\\Documents\\projects\\01-starting-setup\\src\\index.js",[],"C:\\Users\\imtia\\Documents\\projects\\01-starting-setup\\src\\App.js",[],"C:\\Users\\imtia\\Documents\\projects\\01-starting-setup\\src\\components\\Expenses\\Expenses.js",[],"C:\\Users\\imtia\\Documents\\projects\\01-starting-setup\\src\\components\\Expenses\\ExpenseItem.js",[],"C:\\Users\\imtia\\Documents\\projects\\01-starting-setup\\src\\components\\UI\\Card.js",[],"C:\\Users\\imtia\\Documents\\projects\\01-starting-setup\\src\\components\\Expenses\\ExpenseDate.js",[],"C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\components\\Expenses\\Expenses.js",["72"],"import React, {useState} from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem'\r\nimport Card from '../UI/Card'\r\nimport ExpensesFilter from './ExpensesFilter'\r\nimport ExpensesList from './ExpensesList';\r\nimport './Expenses.css'\r\n\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState('2021')\r\n\r\n  const filterChangeHandler = selectedYear =>{\r\n    setFilteredYear(selectedYear);\r\n  }\r\n\r\n  const filteredExpenses = props.items.filter(el => el.date.getFullYear().toString() === filteredYear)\r\n\r\n  // Alternatively, you can use this instead of ternary\r\n  // let expensesContent = <p>No expenses found</p>\r\n\r\n  // if (filteredExpenses.length > 0 ) {\r\n  //   filteredExpenses.map(expense => <ExpenseItem \r\n  //     key={expense.id}\r\n  //     title={expense.title} \r\n  //     amount={expense.amount}\r\n  //     date={expense.date}\r\n  //   />)}\r\n\r\n  return (\r\n    <div>\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>\r\n      {/* {filteredExpenses.length === 0 ? <p>No expenses found</p>:\r\n      filteredExpenses.map(expense => <ExpenseItem \r\n        key={expense.id}\r\n        title={expense.title} \r\n        amount={expense.amount}\r\n        date={expense.date}\r\n      />)} */}\r\n      <ExpensesList items={filteredExpenses}/>\r\n\r\n\r\n    </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Expenses","C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\components\\Expenses\\ExpenseItem.js",[],"C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\components\\UI\\Card.js",[],"C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\components\\Expenses\\ExpenseDate.js",[],"C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\components\\NewExpense\\NewExpense.js",[],"C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\components\\NewExpense\\ExpenseForm.js",[],"C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\components\\Expenses\\ExpensesFilter.js",["73"],"import { PromiseProvider } from 'mongoose';\r\nimport React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value)\r\n  };\r\n  \r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","C:\\Users\\imtia\\documents\\projects\\01-starting-setup\\src\\components\\Expenses\\ExpensesList.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":19},{"ruleId":"78","severity":1,"message":"82","line":1,"column":10,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'ExpenseItem' is defined but never used.","Identifier","unusedVar","'PromiseProvider' is defined but never used.","no-global-assign","no-unsafe-negation"]